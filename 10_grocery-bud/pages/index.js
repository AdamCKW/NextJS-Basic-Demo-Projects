import Head from 'next/head';
import React, { useState, useEffect } from 'react';
import List from './List';
import Alert from './Alert';

export default function Home() {
    const initialState = [];
    const [name, setName] = useState('');
    const [list, setList] = useState(initialState);
    const [isEditing, setIsEditing] = useState(false);
    const [editID, setEditID] = useState(null);
    const [alert, setAlert] = useState({ show: false, msg: '', type: '' });

    /**
     * It takes the event object as an argument, prevents the default behavior of the form, checks if
     * the name is empty, if it is, it shows an alert, if it isn't, it checks if the isEditing state is
     * true, if it is, it maps through the list and replaces the item with the same id as the editID
     * state with the new name, if it isn't, it creates a new item with the current time as the id and
     * the name as the title, and adds it to the list
     * @param e - the event object
     */
    const handleSubmit = (e) => {
        e.preventDefault();
        if (!name) {
            /* Calling the showAlert function and passing in the parameters true, 'danger', and 'please
            enter a value'. */
            showAlert(true, 'danger', 'please enter a value');
        } else if (name && isEditing) {
            /* Mapping through the list and replacing the item with the same id as the editID
            state with the new name. */
            setList(
                list?.map((item) => {
                    if (item.id === editID) {
                        return { ...item, title: name };
                    }
                    return item;
                })
            );
            setName('');
            setEditID(null);
            setIsEditing(false);
            showAlert(true, 'success', 'value changed');
        } else {
            /* Adding a new item to the list. */
            showAlert(true, 'success', 'item added to the list');
            const newItem = {
                id: new Date().getTime().toString(),
                title: name,
            };
            setList([...list, newItem]);
            setName('');
        }
    };

    /**
     * It takes in three parameters, two of which are optional, and sets the state of the alert object
     * to the values of the parameters
     * @param [show=false] - boolean,
     * @param [type] - 'success', 'error'
     * @param [msg] - The message to be displayed in the alert.
     */
    const showAlert = (show = false, type = '', msg = '') => {
        setAlert({ show, type, msg });
    };

    /**
     * It takes the list array, and sets it to an empty array
     */
    const clearList = () => {
        showAlert(true, 'danger', 'empty list');
        setList([]);
    };

    /**
     * It takes an id as an argument, shows an alert, and then filters the list to remove the item with
     * the matching id
     * @param id - the id of the item to be removed
     */
    const removeItem = (id) => {
        showAlert(true, 'danger', 'item removed');
        setList(list?.filter((item) => item.id !== id));
    };

    /**
     * It takes in an id, finds the item with that id in the list, sets the isEditing state to true,
     * sets the editID state to the id, and sets the name state to the title of the item
     * @param id - The id of the item we want to edit
     */
    const editItem = (id) => {
        const specificItem = list?.find((item) => item.id === id);
        setIsEditing(true);
        setEditID(id);
        setName(specificItem.title);
    };

    /* Checking if there is any data in localStorage, and if there is, it is setting the list state to
    that data. */
    useEffect(() => {
        const listData = JSON.parse(localStorage.getItem('list'));
        if (listData) {
            setList(listData);
        }
    }, []);

    /* Checking if the list state is not equal to the initialState, and if it isn't, it is
    setting the list state to the data in localStorage. */
    useEffect(() => {
        if (list !== initialState) {
            localStorage.setItem('list', JSON.stringify(list));
        }
    }, [list]);

    return (
        <div>
            <Head>
                <title>Grocery Bud Demo</title>
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1.0"
                />
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main>
                <section className="section-center">
                    <form className="grocery-form" onSubmit={handleSubmit}>
                        {/*Checking if the show property of the alert object is true, and if it is, it
                        is rendering the Alert component and passing in the alert object, the showAlert
                        function, and the list
                        array as props. */}
                        {alert.show && (
                            <Alert
                                {...alert}
                                removeAlert={showAlert}
                                list={list}
                            />
                        )}

                        <h3>grocery bud</h3>

                        <div className="form-control">
                            <input
                                type="text"
                                className="grocery"
                                placeholder="e.g eggs"
                                value={name}
                                onChange={(e) => setName(e.target.value)}
                            />
                            <button type="submit" className="submit-btn">
                                {isEditing ? 'edit' : 'submit'}
                            </button>
                        </div>
                    </form>

                    <div className="grocery-container">
                        {/* Rendering the List component and passing in the list array, the removeItem
                        function, and the editItem function as props. */}
                        <List
                            items={list}
                            removeItem={removeItem}
                            editItem={editItem}
                        />
                        <button className="clear-btn" onClick={clearList}>
                            clear items
                        </button>
                    </div>
                </section>
            </main>
        </div>
    );
}
