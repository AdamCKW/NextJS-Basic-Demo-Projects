import Head from 'next/head';
import React, { useState, useEffect } from 'react';
import { FiChevronRight, FiChevronLeft } from 'react-icons/fi';
import { FaQuoteRight } from 'react-icons/fa';
import data from '../data';

/**
 * We're using the useState hook to set the initial state of the people array to the data array, and
 * we're using the useEffect hook to set the index to 0
 */
export default function Home() {
    const [people, setPeople] = useState(data);
    const [index, setIndex] = useState(0);

    /* This is a useEffect hook that is checking if the index is less than 0 or greater than the last
    index of the people array. If it is, it will set the index to the last index of the people
    array. */
    useEffect(() => {
        const lastIndex = people.length - 1;
        if (index < 0) {
            setIndex(lastIndex);
        }

        if (index > lastIndex) {
            setIndex(0);
        }
    }, [index, people]);

    /* Setting an interval to change the index every 5 seconds. */
    useEffect(() => {
        let slider = setInterval(() => {
            setIndex(index + 1);
        }, 5000);

        return () => {
            clearInterval(slider);
        };
    }, [index]);

    return (
        <div>
            <Head>
                <title>Slider Demo</title>
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1.0"
                />
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main>
                <section className="section">
                    <div className="title">
                        <h2>
                            <span>/</span>reviews
                        </h2>
                    </div>
                    <section className="section-center">
                        {/* Mapping through the people array and returning the person object. */}
                        {people?.map((person, personIndex) => {
                            const { id, image, name, title, quote } = person;

                            /* This is checking if the personIndex is equal to the index. If it is, it
                            will set the position to activeSlide. */
                            let position = 'nextSlide';
                            if (personIndex === index) {
                                position = 'activeSlide';
                            }

                            /* This is checking if the personIndex is equal to the index - 1 or if the
                            index is equal to 0 and the personIndex is equal to the last index of
                            the people array. If it is, it will set the position to lastSlide. */
                            if (
                                personIndex === index - 1 ||
                                (index === 0 &&
                                    personIndex === people.length - 1)
                            ) {
                                position = 'lastSlide';
                            }

                            /* It's returning the person object. */
                            return (
                                <article key={id} className={position}>
                                    <picture>
                                        <img
                                            src={image}
                                            alt={name}
                                            className="person-img"
                                        />
                                    </picture>
                                    <h4>{name}</h4>
                                    <p className="title">{title}</p>
                                    <p className="text">{quote}</p>
                                    <FaQuoteRight className="icon" />
                                </article>
                            );
                        })}
                        <button
                            className="prev"
                            onClick={() => setIndex(index - 1)}
                        >
                            <FiChevronLeft />
                        </button>
                        <button
                            className="next"
                            onClick={() => setIndex(index + 1)}
                        >
                            <FiChevronRight />
                        </button>
                    </section>
                </section>
            </main>

            <footer></footer>
        </div>
    );
}
